@using System.Text.Json
@inject IJSRuntime JS
@inject ISnackbar Snackbar

<div class="codeblock" style="max-height:@MaxHeight; max-width:@MaxWidth;">
    <MudExCodeView Code="@(Code ?? " ")"
                   Theme="@_codeTheme"                   
                   Language="MudExCodeLanguage.Css"                   
                   FullHeight FullWidth />
</div>

@*     <div class="codeblock-actions">
        @if (CopyToClipboardEnabled)
        {
            <SnackbarChip @ref="copySnackBarChip" OnClick="@CopyToClipboard" />
        }
    </div>
    <pre>
    <code class="@GetLanguageClass()">@Code</code>
    </pre> *@

    <!-- TODO: Get notified when copy to clipboard is clicked? -->

@code {
    [CascadingParameter(Name = "IsDarkTheme")]
    public bool IsDarkTheme { get; set; }

    [Parameter]
    public string? Code { get; set; }

    [Parameter]
    public MudExCodeLanguage Language { get; set; } = MudExCodeLanguage.CSharp;

    [Parameter]
    public bool CopyToClipboardEnabled { get; set; } = true;

    [Parameter]
    public string MaxHeight { get; set; } = "500px"; // Default max-height

    [Parameter]
    public string MaxWidth { get; set; } = "100%"; // Default max-width

    private CodeBlockTheme _codeTheme = CodeBlockTheme.AtomOneDark;

    private SnackbarChip copySnackBarChip = default!;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _codeTheme = IsDarkTheme ? CodeBlockTheme.AtomOneDark : CodeBlockTheme.AtomOneLight;
    }

    private async Task CopyToClipboard()
    {
        if (string.IsNullOrEmpty(Code)) return;
        try
        {
            await JS.InvokeVoidAsync("navigator.clipboard.writeText", Code);
            ShowNotification("Copied to clipboard!", Severity.Success);
        }
        catch
        {
            ShowNotification("Failed Copy to clipboard!", Severity.Error);
        }
    }

    private void ShowNotification(string message, Severity severity)
    {
        copySnackBarChip.ShowSnackbarChip(message, severity);
    }
}
