<MudDialog DefaultFocus="DefaultFocus.FirstChild">
    <DialogContent>
        Are you sure? This cannot be undone!<br />Please type the word <b>Confirm</b> to continue.
        <MudTextField @ref=_confirmField Class="confirm_field" Immediate="true" @bind-Value="_confirmString" Variant="Variant.Filled" Margin="Margin.Dense" OnKeyDown="@CheckIfEnter" />
        <br/>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="OnConfirm" Disabled="@(!_isConfirmValid)" Variant="Variant.Filled" Color="Color.Warning" StartIcon="@Icons.Material.Filled.ConfirmationNumber">Confirm</MudButton>
        <MudButton OnClick="OnCancel" Variant="Variant.Filled">Cancel</MudButton>
    </DialogActions>
</MudDialog>

<style>
    .confirm_field .mud-input-filled {
    height: 35px;
    padding-bottom: 13px;
    }
</style>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; } = default!;
    private string _confirmString = string.Empty;
    private bool _isConfirmValid => _confirmString.Equals("confirm", StringComparison.OrdinalIgnoreCase);
    private MudTextField<string> _confirmField = default!;

    private void OnConfirm() => MudDialog.Close(DialogResult.Ok(_isConfirmValid));

    private void OnCancel() => MudDialog.Close(DialogResult.Ok(false));

    private void CheckIfEnter(KeyboardEventArgs args)
    {
        // if it's not valid we don't care
        if (!_isConfirmValid)
            return;

        // if enter key then check if _isconfirmValid and if it is then go to onconfirm
        if (args.Code == "Enter" || args.Code == "NumpadEnter")
        {
            OnConfirm();
        }
    }
}
