@using System.Text.Json
@inject IJSRuntime JS
@inject ISnackbar Snackbar

<div class="codeblock" style="max-height:@MaxHeight; max-width:@MaxWidth;">
    <div class="codeblock-actions">
        @if (CopyToClipboardEnabled)
        {
            <SnackbarChip Message="@_notificationMessage" Severity="@_notificationSeverity"
                          OnClick="@CopyToClipboard" />
        }
    </div>
    <pre>
    <code class="@GetLanguageClass()">@Code</code>
    </pre>
</div>

@code {
    [Parameter]
    public string? Code { get; set; }

    [Parameter]
    public string Language { get; set; } = "plaintext";

    [Parameter]
    public bool CopyToClipboardEnabled { get; set; } = true;

    [Parameter]
    public string MaxHeight { get; set; } = "500px"; // Default max-height

    [Parameter]
    public string MaxWidth { get; set; } = "100%"; // Default max-width

    private string GetLanguageClass() => $"language-{Language.ToLower()}";
    private string _notificationMessage = string.Empty;
    private Severity _notificationSeverity = Severity.Info;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JS.InvokeVoidAsync("Prism.highlightAll");
    }

    private async Task CopyToClipboard()
    {
        if (string.IsNullOrEmpty(Code)) return;
        try
        {
            await JS.InvokeVoidAsync("navigator.clipboard.writeText", Code);
            ShowNotification("Copied to clipboard!", Severity.Success);
        }
        catch
        {
            ShowNotification("Failed Copy to clipboard!", Severity.Error);
        }
    }

    private void ShowNotification(string message, Severity severity)
    {
        _notificationMessage = message;
        _notificationSeverity = severity;
    }
}