name: 'Build and Deploy Docker Image'

on:
  workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_AMY }}
        password: ${{ secrets.DOCKER_PAT }}

    - name: Delete Previous Versions from Docker Hub
      run: |
        # Get the list of tags
        TAGS=$(curl -s -H "Authorization: Bearer $(curl -s -H "Content-Type: application/json" -X POST -d '{"username": "${{ secrets.DOCKER_AMY }}", "password": "${{ secrets.DOCKER_PAT }}"}' https://hub.docker.com/v2/users/login/ | jq -r .token)" \
        "https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_AMY }}/mudblazorthemecreator/tags?page_size=100" | jq -r '.results|.[]|.name')
    
        # Check if there are any tags
        if [ -z "$TAGS" ]; then
          echo "No tags found"
          exit 0
        fi
    
        # Delete each tag
        for TAG in $TAGS; do
          echo "Deleting tag: $TAG"
          curl -s -X DELETE \
            -H "Authorization: Bearer $(curl -s -H "Content-Type: application/json" -X POST -d '{"username": "${{ secrets.DOCKER_AMY }}", "password": "${{ secrets.DOCKER_PAT }}"}' https://hub.docker.com/v2/users/login/ | jq -r .token)" \
            "https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_AMY }}/mudblazorthemecreator/tags/$TAG/"
        done

    - name: Build Docker Image
      run: |
        docker build --no-cache -t mudblazorthemecreator -f ${{ github.workspace }}/ThemeCreatorMudBlazor.UI/Dockerfile --build-arg BUILD_CONFIGURATION=Release .
    
    - name: Docker Image Metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: mudblazorthemecreator
        tags: |
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=sha

    - name: Tag Docker image
      env:
        USERNAME: ${{ secrets.DOCKER_AMY }}
        VERSION: ${{ steps.meta.outputs.version }}
      run: |
        docker tag mudblazorthemecreator "$USERNAME"/mudblazorthemecreator:"$VERSION"

    - name: Push Docker image
      env:
        USERNAME: ${{ secrets.DOCKER_AMY }}
        VERSION: ${{ steps.meta.outputs.version }}    
      run: |
        docker push "$USERNAME"/mudblazorthemecreator:"$VERSION"

    - name: Display Version
      run: |
        echo "Current Version=${{ steps.meta.outputs.version }}"

    - name: Update Docker Container
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOSTNAME }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        script: |
          ./update_container.sh
